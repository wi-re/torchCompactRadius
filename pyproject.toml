[project]
name = "torchCompactRadius"
version = "0.5.5"
authors = [
  { name="Rene Winchenbach", email="contact@fluids.dev" },
]
maintainers = [
  { name="Rene Winchenbach", email="contact@fluids.dev" },
]
description = "Compact Hashing based radius search for pyTorch using C++/CUDA backends."
readme = "README.md"
keywords = ["sph","radius","pytorch"]
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",

    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "torch>=1.9.0", 
    "numpy",
    "scipy"
]
license = {file = "LICENSE"}

[project.urls]
Repository = "https://github.com/wi-re/torchCompactRadius"
Issues = "https://github.com/wi-re/torchCompactRadius/issues"

[build-system]
requires = [
    "setuptools>=61.0", 
    "wheel",
    "torch>=1.9.0",
    "toml",
    "numpy"  # Often needed for torch extensions
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
# Force setuptools to include extension modules from setup.py
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"] 

[tool.setuptools.package-data]
"*" = ["*.*"] 

# Add metadata to indicate this package should be built from source
[project.optional-dependencies]
dev = ["pytest", "twine", "build"]